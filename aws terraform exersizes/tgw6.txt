provider "aws" {
  region = "us-west-1"  # Set your desired region here
}

resource "aws_vpc" "vpc1" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = "VPC1"
  }
}

resource "aws_vpc" "vpc2" {
  cidr_block = "10.1.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = "VPC2"
  }
}

resource "aws_vpc" "vpc3" {
  cidr_block = "10.2.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = "VPC3"
  }
}

resource "aws_subnet" "subnet1" {
  count = 3
  cidr_block = "10.0.${count.index}.0/24"
  vpc_id = aws_vpc.vpc1.id

  availability_zone = "us-west-1a"  # Adjust the AZ as needed

  tags = {
    Name = "Subnet${count.index + 1}"
  }
}

resource "aws_subnet" "subnet2" {
  count = 3
  cidr_block = "10.1.${count.index}.0/24"
  vpc_id = aws_vpc.vpc2.id

  availability_zone = "us-west-1a"  # Adjust the AZ as needed

  tags = {
    Name = "Subnet${count.index + 1}"
  }
}

resource "aws_subnet" "subnet3" {
  count = 3
  cidr_block = "10.2.${count.index}.0/24"
  vpc_id = aws_vpc.vpc3.id

  availability_zone = "us-west-1a"  # Adjust the AZ as needed

  tags = {
    Name = "Subnet${count.index + 1}"
  }
}

resource "aws_ec2_instance" "instance1" {
  count         = 3
  ami           = "ami-12345678"  # Replace with a valid AMI ID
  instance_type = "t2.micro"
  subnet_id     = element(aws_subnet.subnet1.*.id, count.index)

  tags = {
    Name = "Instance${count.index + 1}"
  }
}

# Create a Transit Gateway
resource "aws_ec2_transit_gateway" "transit_gateway" {
  description = "Transit Gateway for VPC communication"
}

# Attach VPCs to the Transit Gateway
resource "aws_ec2_transit_gateway_vpc_attachment" "vpc_attachment" {
  count           = 3
  transit_gateway_id = aws_ec2_transit_gateway.transit_gateway.id
  vpc_id          = element([aws_vpc.vpc1.id, aws_vpc.vpc2.id, aws_vpc.vpc3.id], count.index)

  subnet_ids = [
    element(aws_subnet.subnet1.*.id, count.index),
    element(aws_subnet.subnet2.*.id, count.index),
    element(aws_subnet.subnet3.*.id, count.index),
  ]
}

# Create routes in each VPC's route table to route traffic through the Transit Gateway
resource "aws_route" "route_to_transit_gateway" {
  count = 3
  route_table_id         = element([aws_vpc.vpc1.default_route_table_id, aws_vpc.vpc2.default_route_table_id, aws_vpc.vpc3.default_route_table_id], count.index)
  destination_cidr_block = "0.0.0.0/0"
  transit_gateway_id     = aws_ec2_transit_gateway.transit_gateway.id
}