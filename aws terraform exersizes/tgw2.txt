hcl
Copy code
provider "aws" {
  region = "us-east-1" # Change this to your desired region
}

resource "aws_vpc" "vpc_hub" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true
}

resource "aws_vpc" "vpc_spoke1" {
  cidr_block = "10.1.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true
}

resource "aws_vpc" "vpc_spoke2" {
  cidr_block = "10.2.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true
}

resource "aws_subnet" "subnet_hub" {
  count = 2
  cidr_block = "10.0.${count.index}.0/24"
  vpc_id = aws_vpc.vpc_hub.id
  availability_zone = "us-east-1a" # Change availability zone as needed
}

resource "aws_subnet" "subnet_spoke1" {
  count = 2
  cidr_block = "10.1.${count.index}.0/24"
  vpc_id = aws_vpc.vpc_spoke1.id
  availability_zone = "us-east-1a" # Change availability zone as needed
}

resource "aws_subnet" "subnet_spoke2" {
  count = 2
  cidr_block = "10.2.${count.index}.0/24"
  vpc_id = aws_vpc.vpc_spoke2.id
  availability_zone = "us-east-1a" # Change availability zone as needed
}

resource "aws_ec2_instance" "instance_spoke1" {
  count = 2
  ami           = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.subnet_spoke1[count.index].id
}

resource "aws_ec2_instance" "instance_spoke2" {
  count = 2
  ami           = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.subnet_spoke2[count.index].id
}

resource "aws_ec2_instance" "instance_hub" {
  count = 2
  ami           = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.subnet_hub[count.index].id
}

resource "aws_route_table" "route_table_hub" {
  vpc_id = aws_vpc.vpc_hub.id
}

resource "aws_route_table" "route_table_spoke1" {
  vpc_id = aws_vpc.vpc_spoke1.id
}

resource "aws_route_table" "route_table_spoke2" {
  vpc_id = aws_vpc.vpc_spoke2.id
}

resource "aws_route" "route_hub_to_tgw" {
  route_table_id         = aws_route_table.route_table_hub.id
  destination_cidr_block = "0.0.0.0/0" # This assumes you want to route all traffic to the Transit Gateway
  transit_gateway_id     = aws_ec2_transit_gateway.transit_gateway.id
}

resource "aws_ec2_transit_gateway" "transit_gateway" {
  description = "Transit Gateway for VPC connectivity"
}

resource "aws_ec2_transit_gateway_attachment" "attachment_hub" {
  transit_gateway_id = aws_ec2_transit_gateway.transit_gateway.id
  vpc_id             = aws_vpc.vpc_hub.id
}

resource "aws_ec2_transit_gateway_attachment" "attachment_spoke1" {
  transit_gateway_id = aws_ec2_transit_gateway.transit_gateway.id
  vpc_id             = aws_vpc.vpc_spoke1.id
}

resource "aws_ec2_transit_gateway_attachment" "attachment_spoke2" {
  transit_gateway_id = aws_ec2_transit_gateway.transit_gateway.id
  vpc_id             = aws_vpc.vpc_spoke2.id
}